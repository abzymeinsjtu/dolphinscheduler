<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.apache.dolphinscheduler.dao.mapper.v3.ProjectV3Mapper">
    <sql id="baseSql">
        id, name, code, description, user_id, flag, create_time, update_time
    </sql>
    <sql id="baseSqlV2">
        ${alias}.id, ${alias}.name, ${alias}.code, ${alias}.description, ${alias}.user_id, ${alias}.flag, ${alias}.create_time, ${alias}.update_time
    </sql>
    <select id="queryProjectByCodeForUpdate" resultType="org.apache.dolphinscheduler.dao.entity.Project">
        select
        <include refid="baseSqlV2">
            <property name="alias" value="p"/>
        </include>, rel.perm
        from t_ds_project p left join t_ds_relation_project_user rel
        on p.id = rel.project_id and #{userId} = rel.user_id
        where p.code = #{projectCode}
    </select>
    <select id="queryProjectByName" resultType="org.apache.dolphinscheduler.dao.entity.Project">
        select
        <include refid="baseSql" />
        from t_ds_project
        where name = #{projectName}
    </select>
    <select id="listProjects" resultType="org.apache.dolphinscheduler.dao.entity.Project">
        select
        <include refid="baseSqlV2">
            <property name="alias" value="p"/>
        </include>,
            rel.perm as perm,
            u.user_name as user_name
        from t_ds_project p
        left join t_ds_user u on u.id=p.user_id
        left join t_ds_relation_project_user rel on p.id = rel.project_id
            and #{userId} = rel.user_id
        where 1 = 1
        <if test="offset != null ">
            and p.id > #{offset}
        </if>
        <if test="searchVal != null and searchVal != ''">
            <bind name="searchValPat" value="'%' + searchVal + '%'" />
            and p.name like #{searchValPat}
        </if>
        order by p.id
        limit #{maxResults}
    </select>
</mapper>
